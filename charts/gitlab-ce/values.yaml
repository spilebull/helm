## GitLab CE image
## ref: https://hub.docker.com/r/gitlab/gitlab-ce/tags/
##
image: gitlab/gitlab-ce:10.6.4-ce.0

## Specify a imagePullPolicy
## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent

## The URL (with protocol) that your users will use to reach the install.
## ref: https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab
##
externalUrl: http://gitlab.dev.usen.com/

## Change the initial default admin password if set. If not set, you'll be
## able to set it when you first visit your install.
##
gitlabRootPassword: "1qaz2wsx"

## For minikube, set this to NodePort, elsewhere use LoadBalancer
## ref: http://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
##
serviceType: NodePort

## Ingress configuration options
##
ingress:
  enabled: false

  ## Gitlab Ingress annotations
  ##
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: 'true'

  ## Gitlab Ingress hostnames
  ## Must be provided if Ingress is enabled
  ##
  hosts: {}
  #  - gitlab.dev.usen.com
  #  - registry.dev.usen.com
  
  ## Gitlab Ingress TLS configuration
  ## Secrets must be manually created in the namespace
  ##
  tls: {}
  #   - secretName: gitlab-server-tls
  #     hosts:
  #       - gitlab.dev.usen.com

## Configure external service ports
## ref: http://kubernetes.io/docs/user-guide/services/
sshPort: 22
httpPort: 80
httpsPort: 443
workhorsePort: 8005
prometheusPort: 9090
nodeExporterPort: 9100

## Optional additional ports
mattermostPort: 8065
registryPort: 8105

## livenessPort Port of liveness probe endpoint
livenessPort: http
## readinessPort Port of readiness probe endpoint
readinessPort: http

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  ## GitLab requires a good deal of resources. We have split out Postgres and
  ## redis, which helps some. Refer to the guidelines for larger installs.
  ## ref: https://docs.gitlab.com/ce/install/requirements.html#hardware-requirements
  requests:
    memory: 1Gi
    cpu: 500m
  limits:
    memory: 2Gi
    cpu: 1

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
## ref: https://docs.gitlab.com/ce/install/requirements.html#storage
##
persistence:
  ## This volume persists generated configuration files, keys, and certs.
  ##
  gitlabEtc:
    enabled: false
    size: 1Gi
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    #storageClass: default
    accessMode: ReadWriteOnce

  ## This volume is used to store git data and other project files.
  ## ref: https://docs.gitlab.com/omnibus/settings/configuration.html#storing-git-data-in-an-alternative-directory
  ##
  gitlabData:
    enabled: false
    size: 10Gi
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    #storageClass: default
    accessMode: ReadWriteOnce

## Configuration values for the postgresql dependency.
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
##
postgresql:
  # Sets whether the postgresql helm chart is used as a dependency
  enabled: true

  # 9.6 is the newest supported version for the GitLab container
  imageTag: "9.6"
  cpu: 1000m
  memory: 1Gi

  postgresUser: gitlab
  postgresPassword: gitlab
  postgresDatabase: gitlab

  persistence:
    size: 10Gi
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    existingClaim: gitlab

## Configuration values for the redis dependency.
## ref: https://github.com/kubernetes/charts/blob/master/stable/redis/README.md
##
redis:
  # Sets whether the redis helm chart is used as a dependency
  enabled: true

  redisPassword: "gitlab"

  resources:
    requests:
      memory: 1Gi

  persistence:
    size: 10Gi
    existingClaim: gitlab

## Configuration values for the GitLab Omnibus.
## ref https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/gitlab.yml.md
##
omnibusConfigRuby: |
  unicorn['worker_processes'] = 2;
  gitlab_rails['trusted_proxies'] = ["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16"];
  gitlab_rails['time_zone'] = 'Asia/Tokyo';

  ## Email Settings
  # gitlab_rails['gitlab_email_enabled'] = true;
  # gitlab_rails['gitlab_email_from'] = 'example@example.com';
  # gitlab_rails['gitlab_email_display_name'] = 'Example';
  # gitlab_rails['gitlab_email_reply_to'] = 'noreply@example.com';
  # gitlab_rails['gitlab_email_subject_suffix'] = '';

  ## Reply by email
  # gitlab_rails['incoming_email_enabled'] = true;
  # gitlab_rails['incoming_email_address'] = "gitlab-incoming+%{key}@gmail.com";
  # gitlab_rails['incoming_email_email'] = "gitlab-incoming@gmail.com";
  # gitlab_rails['incoming_email_password'] = "[REDACTED]";
  # gitlab_rails['incoming_email_host'] = "imap.gmail.com";
  # gitlab_rails['incoming_email_port'] = 993;
  # gitlab_rails['incoming_email_ssl'] = true;
  # gitlab_rails['incoming_email_start_tls'] = false;
  # gitlab_rails['incoming_email_mailbox_name'] = "inbox";
  # gitlab_rails['incoming_email_idle_timeout'] = 60;

  ## LDAP Settings
  gitlab_rails['ldap_enabled'] = true;
  gitlab_rails['ldap_servers'] = {
    'main' => { # 'main' is the GitLab 'provider ID' of this LDAP server
      'label' => 'LDAP',
      'host' =>  'ldap',
      'port' => 389,
      'uid' => 'cn',
      'bind_dn' => 'cn=admin,dc=usen,dc=com',
      'password' => 'admin',
      'encryption' => 'plain', # 'start_tls'|'simple_tls'|'plain'
      'verify_certificates' => true,
      'active_directory' => false,
  #   'allow_username_or_email_login' => false,
  #   'lowercase_usernames' => false,
  #   'block_auto_created_users' => false,
      'base' => 'ou=service,dc=usen,dc=com',
  #   'user_filter' => '',
      'attributes' => {
        'username' => ['uid', 'userid', 'sAMAccountName'],
        'email' => ['mail', 'email', 'userPrincipalName'],
        'name' => 'cn',
        'first_name' => 'givenName',
        'last_name' => 'sn'
      }
    }
  };

  ## OmniAuth Settings
  # gitlab_rails['omniauth_enabled'] = false;
  # gitlab_rails['omniauth_allow_single_sign_on'] = ['saml'];
  # gitlab_rails['omniauth_sync_email_from_provider'] = 'saml';
  # gitlab_rails['omniauth_sync_profile_from_provider'] = ['saml'];
  # gitlab_rails['omniauth_sync_profile_attributes'] = ['email'];
  # gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'saml';
  # gitlab_rails['omniauth_block_auto_created_users'] = true;
  # gitlab_rails['omniauth_auto_link_ldap_user'] = false;
  # gitlab_rails['omniauth_auto_link_saml_user'] = false;
  # gitlab_rails['omniauth_external_providers'] = ['twitter', 'google_oauth2'];
  # gitlab_rails['omniauth_providers'] = [
  #   {
  #     "name" => "google_oauth2",
  #     "app_id" => "YOUR APP ID",
  #     "app_secret" => "YOUR APP SECRET",
  #     "args" => { "access_type" => "offline", "approval_prompt" => "" }
  #   }
  # ];
